diff -urN busybox-1.00.orig/include/applets.h busybox-1.00/include/applets.h
--- busybox-1.00.orig/include/applets.h	2004-08-27 01:01:34.000000000 +0200
+++ busybox-1.00/include/applets.h	2005-02-02 21:20:49.047901536 +0100
@@ -454,6 +454,9 @@
 #ifdef CONFIG_PWD
 	APPLET(pwd, pwd_main, _BB_DIR_BIN, _BB_SUID_NEVER)
 #endif
+#ifdef CONFIG_RAID_START
+	APPLET(raid_start, raid_start_main, _BB_DIR_SBIN, _BB_SUID_NEVER)
+#endif
 #ifdef CONFIG_RDATE
 	APPLET(rdate, rdate_main, _BB_DIR_USR_SBIN, _BB_SUID_NEVER)
 #endif
diff -urN busybox-1.00.orig/include/usage.h busybox-1.00/include/usage.h
--- busybox-1.00.orig/include/usage.h	2004-09-14 18:23:56.000000000 +0200
+++ busybox-1.00/include/usage.h	2005-02-02 21:35:31.165799232 +0100
@@ -1977,6 +1977,12 @@
 	"$ pwd\n" \
 	"/root\n"
 
+#define raid_start_trivial_usage \
+	"MD_DEVICE DISK_DEVICE"
+#define raid_start_full_usage \
+	"Start MD_DEVICE, taking superblock from DISK_DEVICE.\n" \
+	"Example: raid_start /dev/md0 /dev/sdb"
+
 #define rdate_trivial_usage \
 	"[-sp] HOST"
 #define rdate_full_usage \
diff -urN busybox-1.00.orig/sysdeps/linux/defconfig busybox-1.00/sysdeps/linux/defconfig
--- busybox-1.00.orig/sysdeps/linux/defconfig	2004-07-20 08:06:56.000000000 +0200
+++ busybox-1.00/sysdeps/linux/defconfig	2005-02-02 21:20:49.049901232 +0100
@@ -408,6 +408,7 @@
 # CONFIG_NFSMOUNT is not set
 CONFIG_UMOUNT=y
 # CONFIG_FEATURE_MOUNT_FORCE is not set
+CONFIG_RAID_START=y
 
 #
 # Common options for mount/umount
diff -urN busybox-1.00.orig/util-linux/Config.in busybox-1.00/util-linux/Config.in
--- busybox-1.00.orig/util-linux/Config.in	2004-05-19 13:06:20.000000000 +0200
+++ busybox-1.00/util-linux/Config.in	2005-02-02 21:20:49.050901080 +0100
@@ -292,6 +292,12 @@
 	  NFS filesystems.  Most people using BusyBox will also want to enable
 	  the 'mount' utility.
 
+config CONFIG_RAID_START
+	bool "raid_start"
+	default y
+	help
+	  Enable support for RAID starting.
+
 config CONFIG_NFSMOUNT
 	bool "  Support mounting NFS file systems"
 	default n
diff -urN busybox-1.00.orig/util-linux/Makefile.in busybox-1.00/util-linux/Makefile.in
--- busybox-1.00.orig/util-linux/Makefile.in	2004-10-08 09:46:08.000000000 +0200
+++ busybox-1.00/util-linux/Makefile.in	2005-02-02 21:20:49.051900928 +0100
@@ -39,6 +39,7 @@
 UTILLINUX-$(CONFIG_MKSWAP)		+=mkswap.o
 UTILLINUX-$(CONFIG_MORE)		+=more.o
 UTILLINUX-$(CONFIG_MOUNT)		+=mount.o
+UTILLINUX-$(CONFIG_RAID_START)		+=raid_start.o
 UTILLINUX-$(CONFIG_NFSMOUNT)		+=nfsmount.o
 UTILLINUX-$(CONFIG_PIVOT_ROOT)		+=pivot_root.o
 UTILLINUX-$(CONFIG_RDATE)		+=rdate.o
diff -urN busybox-1.00.orig/util-linux/raid_start.c busybox-1.00/util-linux/raid_start.c
--- busybox-1.00.orig/util-linux/raid_start.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.00/util-linux/raid_start.c	2005-02-02 21:20:49.053900624 +0100
@@ -0,0 +1,72 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * raid_start implementation for busybox
+ *
+ * Copyright (C) 2003 by Michal Moskal <malekith@pld-linux.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ *
+ */
+
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <sys/ioctl.h>
+#include <fcntl.h>
+#include <unistd.h>
+
+#include "busybox.h"
+
+#define MD_MAJOR        9
+#define START_ARRAY             _IO (MD_MAJOR, 0x31)
+
+extern int raid_start_main(int argc, char **argv)
+{
+	int fd_md;
+	int i;
+	struct stat st;
+	
+	if (argc < 3) {
+	    bb_show_usage();
+		return 0;
+	}
+
+	fd_md = open(argv[1], O_RDWR, 0);
+	if (fd_md < 0)
+		bb_perror_msg_and_die("error opening raid device `%s'", argv[1]);
+
+	for (i = 2; i < argc; i++) {
+    	if (stat(argv[i], &st)) {
+			bb_perror_msg("error stating raid builing device `%s'", argv[i]);
+			continue;
+		}
+
+		if (ioctl(fd_md, START_ARRAY, (unsigned long) st.st_rdev) == -1) {
+			bb_perror_msg("error starting raid device `%s:%s'", argv[1], argv[i]);
+			continue;
+		}
+
+		return 0;
+	}
+
+	return 1;
+}
+
+/*
+Local Variables:
+c-file-style: "linux"
+c-basic-offset: 4
+tab-width: 4
+End:
+*/
