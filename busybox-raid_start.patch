--- busybox-1.1.0/include/applets.h.wiget	2006-01-11 06:44:14.000000000 +0100
+++ busybox-1.1.0/include/applets.h	2006-01-18 16:44:37.000000000 +0100
@@ -526,6 +526,9 @@
 #ifdef CONFIG_PWD
 	APPLET(pwd, pwd_main, _BB_DIR_BIN, _BB_SUID_NEVER)
 #endif
+#ifdef CONFIG_RAID_START
+	APPLET(raid_start, raid_start_main, _BB_DIR_SBIN, _BB_SUID_NEVER)
+#endif
 #ifdef CONFIG_RDATE
 	APPLET(rdate, rdate_main, _BB_DIR_USR_SBIN, _BB_SUID_NEVER)
 #endif
--- busybox-1.1.0/include/usage.h.wiget	2006-01-11 06:44:14.000000000 +0100
+++ busybox-1.1.0/include/usage.h	2006-01-18 16:44:37.000000000 +0100
@@ -2399,6 +2399,12 @@
 	"$ pwd\n" \
 	"/root\n"
 
+#define raid_start_trivial_usage \
+	"MD_DEVICE DISK_DEVICE"
+#define raid_start_full_usage \
+	"Start MD_DEVICE, taking superblock from DISK_DEVICE.\n" \
+	"Example: raid_start /dev/md0 /dev/sdb"
+
 #define rdate_trivial_usage \
 	"[-sp] HOST"
 #define rdate_full_usage \
--- busybox-1.1.0/util-linux/Config.in.wiget	2006-01-11 06:44:22.000000000 +0100
+++ busybox-1.1.0/util-linux/Config.in	2006-01-18 16:46:12.000000000 +0100
@@ -384,6 +384,12 @@
 	help
 	 Enable mounting of NFS file systems.
 
+config CONFIG_RAID_START
+	bool "raid_start"
+	default y
+	help
+	  Enable support for RAID starting.
+
 config CONFIG_UMOUNT
 	bool "umount"
 	default n
--- busybox-1.1.0/util-linux/Makefile.in.wiget	2006-01-11 06:44:22.000000000 +0100
+++ busybox-1.1.0/util-linux/Makefile.in	2006-01-18 16:45:04.000000000 +0100
@@ -29,6 +29,7 @@
 UTILLINUX-$(CONFIG_MKSWAP)        +=mkswap.o
 UTILLINUX-$(CONFIG_MORE)          +=more.o
 UTILLINUX-$(CONFIG_MOUNT)         +=mount.o
+UTILLINUX-$(CONFIG_RAID_START)		+=raid_start.o
 UTILLINUX-$(CONFIG_FEATURE_MOUNT_NFS)	+=nfsmount.o
 UTILLINUX-$(CONFIG_PIVOT_ROOT)    +=pivot_root.o
 UTILLINUX-$(CONFIG_RDATE)         +=rdate.o
--- /dev/null	2006-01-12 23:49:35.000000000 +0100
+++ busybox-1.1.0/util-linux/raid_start.c	2006-01-18 16:44:37.000000000 +0100
@@ -0,0 +1,72 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * raid_start implementation for busybox
+ *
+ * Copyright (C) 2003 by Michal Moskal <malekith@pld-linux.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ *
+ */
+
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <sys/ioctl.h>
+#include <fcntl.h>
+#include <unistd.h>
+
+#include "busybox.h"
+
+#define MD_MAJOR        9
+#define START_ARRAY             _IO (MD_MAJOR, 0x31)
+
+extern int raid_start_main(int argc, char **argv)
+{
+	int fd_md;
+	int i;
+	struct stat st;
+	
+	if (argc < 3) {
+	    bb_show_usage();
+		return 0;
+	}
+
+	fd_md = open(argv[1], O_RDWR, 0);
+	if (fd_md < 0)
+		bb_perror_msg_and_die("error opening raid device `%s'", argv[1]);
+
+	for (i = 2; i < argc; i++) {
+    	if (stat(argv[i], &st)) {
+			bb_perror_msg("error stating raid builing device `%s'", argv[i]);
+			continue;
+		}
+
+		if (ioctl(fd_md, START_ARRAY, (unsigned long) st.st_rdev) == -1) {
+			bb_perror_msg("error starting raid device `%s:%s'", argv[1], argv[i]);
+			continue;
+		}
+
+		return 0;
+	}
+
+	return 1;
+}
+
+/*
+Local Variables:
+c-file-style: "linux"
+c-basic-offset: 4
+tab-width: 4
+End:
+*/
