commit efd08bfa0adab3ae299be7abdd45161a15804a3b
Author: Denys Vlasenko <vda.linux@googlemail.com>
Date:   Wed Oct 19 17:54:42 2011 +0200

    gen_build_files: don't pass 200k+ strings as params. Closes 4321
    
    Also removes one grep per generated file.
    
    Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>

diff --git a/scripts/gen_build_files.sh b/scripts/gen_build_files.sh
index e518a90..1a3d3e9 100755
--- a/scripts/gen_build_files.sh
+++ b/scripts/gen_build_files.sh
@@ -19,25 +19,20 @@ chk() { status "CHK" "$@"; }
 
 generate()
 {
-	local src="$1" dst="$2" header="$3" insert="$4"
+	# NB: data to be inserted at INSERT line is coming on stdin
+	local src="$1" dst="$2" header="$3"
 	#chk "${dst}"
-	(
+	{
 		# Need to use printf: different shells have inconsistent
-		# rules re handling of "\n" in echo params,
-		# and ${insert} definitely contains "\n".
-		# Therefore, echo "${header}" would not work:
+		# rules re handling of "\n" in echo params.
 		printf "%s\n" "${header}"
-		if grep -qs '^INSERT$' "${src}"; then
-			sed -n '1,/^INSERT$/p' "${src}"
-			printf "%s\n" "${insert}"
-			sed -n '/^INSERT$/,$p' "${src}"
-		else
-			if [ -n "${insert}" ]; then
-				printf "%s\n" "ERROR: INSERT line missing in: ${src}" 1>&2
-			fi
-			cat "${src}"
-		fi
-	) | sed '/^INSERT$/d' > "${dst}.tmp"
+		# print everything up to INSERT line
+		sed -n '/^INSERT$/q;1,/^INSERT$/p' "${src}"
+		# copy stdin to stdout
+		cat
+		# print everything after INSERT line
+		sed -n '/^INSERT$/{:l;n;p;bl}' "${src}"
+	} >"${dst}.tmp"
 	if ! cmp -s "${dst}" "${dst}.tmp"; then
 		gen "${dst}"
 		mv "${dst}.tmp" "${dst}"
@@ -47,24 +42,21 @@ generate()
 }
 
 # (Re)generate include/applets.h
-s=`sed -n 's@^//applet:@@p' "$srctree"/*/*.c "$srctree"/*/*/*.c`
-generate \
+sed -n 's@^//applet:@@p' "$srctree"/*/*.c "$srctree"/*/*/*.c \
+| generate \
 	"$srctree/include/applets.src.h" \
 	"include/applets.h" \
-	"/* DO NOT EDIT. This file is generated from applets.src.h */" \
-	"${s}"
+	"/* DO NOT EDIT. This file is generated from applets.src.h */"
 
 # (Re)generate include/usage.h
 # We add line continuation backslash after each line,
 # and insert empty line before each line which doesn't start
 # with space or tab
-# (note: we need to use \\\\ because of ``)
-s=`sed -n -e 's@^//usage:\([ \t].*\)$@\1 \\\\@p' -e 's@^//usage:\([^ \t].*\)$@\n\1 \\\\@p' "$srctree"/*/*.c "$srctree"/*/*/*.c`
-generate \
+sed -n -e 's@^//usage:\([ \t].*\)$@\1 \\@p' -e 's@^//usage:\([^ \t].*\)$@\n\1 \\@p' "$srctree"/*/*.c "$srctree"/*/*/*.c \
+| generate \
 	"$srctree/include/usage.src.h" \
 	"include/usage.h" \
-	"/* DO NOT EDIT. This file is generated from usage.src.h */" \
-	"${s}"
+	"/* DO NOT EDIT. This file is generated from usage.src.h */"
 
 # (Re)generate */Kbuild and */Config.in
 { cd -- "$srctree" && find . -type d; } | while read -r d; do
@@ -75,11 +67,10 @@ generate \
 	if test -f "$src"; then
 		mkdir -p -- "$d" 2>/dev/null
 
-		s=`sed -n 's@^//kbuild:@@p' "$srctree/$d"/*.c`
-		generate \
+		sed -n 's@^//kbuild:@@p' "$srctree/$d"/*.c \
+		| generate \
 			"${src}" "${dst}" \
-			"# DO NOT EDIT. This file is generated from Kbuild.src" \
-			"${s}"
+			"# DO NOT EDIT. This file is generated from Kbuild.src"
 	fi
 
 	src="$srctree/$d/Config.src"
@@ -87,11 +78,10 @@ generate \
 	if test -f "$src"; then
 		mkdir -p -- "$d" 2>/dev/null
 
-		s=`sed -n 's@^//config:@@p' "$srctree/$d"/*.c`
-		generate \
+		sed -n 's@^//config:@@p' "$srctree/$d"/*.c \
+		| generate \
 			"${src}" "${dst}" \
-			"# DO NOT EDIT. This file is generated from Config.src" \
-			"${s}"
+			"# DO NOT EDIT. This file is generated from Config.src"
 	fi
 done
 
